apply plugin: 'com.android.application'

/**
 * 加载签名配置文件
 */
def loadSigningConfigs() {
    def Properties props = new Properties()
    def propFile = file('../signing.properties') //加载properties文件
    if (propFile.canRead()) {
        props.load(new FileInputStream(propFile))
        if (props != null && props.containsKey('RELEASE_STORE_FILE') && props.containsKey('RELEASE_STORE_PASSWORD') &&
                props.containsKey('RELEASE_KEY_ALIAS') && props.containsKey('RELEASE_KEY_PASSWORD')) {
            android.signingConfigs.release.storeFile = file(props['RELEASE_STORE_FILE'])
            android.signingConfigs.release.storePassword = props['RELEASE_STORE_PASSWORD']
            android.signingConfigs.release.keyAlias = props['RELEASE_KEY_ALIAS']
            android.signingConfigs.release.keyPassword = props['RELEASE_KEY_PASSWORD']
        } else {
            android.buildTypes.release.signingConfig = null
        }
    } else {
        android.buildTypes.release.signingConfig = null
    }
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.hx.zzp"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        signingConfigs {
            release {
            }
        }
//        release {
//            storeFile file('hx_zzp.jks')
//            storePassword 'hx123456'
//            keyAlias 'key0'
//            keyPassword 'hx123456'
//        }
        loadSigningConfigs() //加载签名信息
    }
    buildTypes {
        release {
            minifyEnabled
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.release
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(':baseutillib')
    //注解
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    //tabLayout:https://github.com/H07000223/FlycoTabLayout
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    //圆角图片：https://github.com/vinc3m1/RoundedImageView
    implementation 'com.makeramen:roundedimageview:2.3.0'
    //    implementation files('libs/BaiduLBS_Android.jar')
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.alibaba:fastjson:1.2.49'
    //微信支付
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'
    //二维码
    implementation 'com.mylhyl:zxingscanner:2.0.4'
    //数据库
    //    implementation 'com.j256.ormlite:ormlite-android:5.0'
    //    implementation 'com.j256.ormlite:ormlite-core:5.0'
    //密码输入框 https://github.com/superSp/PasswordInputEdt
    //    implementation 'com.github.superSp:PasswordInputEdt:v1.0'
    //时间、条件选择器 PickerView: https://github.com/Bigkoo/Android-PickerView
    implementation 'com.contrarywind:Android-PickerView:4.1.3'
    //async-http
    implementation 'com.zhy:okhttputils:2.6.2'
    //loading
    implementation 'com.kaopiz:kprogresshud:1.0.2'
    implementation 'com.android.support:multidex:1.0.1'
    implementation files('libs/alipaySdk-20180403.jar')
    implementation project(':umeng_scoial_sdk')
    implementation project(':update')
}
